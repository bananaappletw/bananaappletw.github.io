"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5316],{3905:(e,t,r)=>{r.d(t,{Zo:()=>p,kt:()=>m});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function i(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function o(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var s=a.createContext({}),c=function(e){var t=a.useContext(s),r=t;return e&&(r="function"==typeof e?e(t):i(i({},t),e)),r},p=function(e){var t=c(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},u=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,s=e.parentName,p=o(e,["components","mdxType","originalType","parentName"]),u=c(r),m=n,b=u["".concat(s,".").concat(m)]||u[m]||d[m]||l;return r?a.createElement(b,i(i({ref:t},p),{},{components:r})):a.createElement(b,i({ref:t},p))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,i=new Array(l);i[0]=u;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:n,i[1]=o;for(var c=2;c<l;c++)i[c]=r[c];return a.createElement.apply(null,i)}return a.createElement.apply(null,r)}u.displayName="MDXCreateElement"},25528:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>s,contentTitle:()=>i,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>c});var a=r(87462),n=(r(67294),r(3905));const l={title:"db/seeds for carrierwave",author:"bananaapple",tags:["ruby on rails","carrierwave"],categories:["computer science"],date:new Date("2017-01-04T13:58:00.000Z")},i=void 0,o={permalink:"/archives/db-seeds-for-carrierwave",editUrl:"https://github.com/banananappletw/blog/edit/master/blog/archives/archives/db-seeds-for-carrierwave.md",source:"@site/archives/db-seeds-for-carrierwave.md",title:"db/seeds for carrierwave",description:"\u9019\u7bc7\u4e3b\u8981\u662f\u7d00\u9304\u5c0d Carrierwave \u5beb db/seeds \u7684\u65b9\u6cd5",date:"2017-01-04T13:58:00.000Z",formattedDate:"January 4, 2017",tags:[{label:"ruby on rails",permalink:"/archives/tags/ruby-on-rails"},{label:"carrierwave",permalink:"/archives/tags/carrierwave"}],readingTime:.75,hasTruncateMarker:!1,authors:[{name:"bananaapple"}],frontMatter:{title:"db/seeds for carrierwave",author:"bananaapple",tags:["ruby on rails","carrierwave"],categories:["computer science"],date:"2017-01-04T13:58:00.000Z"},prevItem:{title:"Preview file using send_file",permalink:"/archives/Preview-file-using-send-file"},nextItem:{title:"N+1 issue",permalink:"/archives/N-1-issue"}},s={authorsImageUrls:[void 0]},c=[{value:"<code>app/models/material.rb</code>",id:"appmodelsmaterialrb",level:2},{value:"<code>db/seeds.rb</code>",id:"dbseedsrb",level:2},{value:"<code>app/models/challenge.rb</code>",id:"appmodelschallengerb",level:2},{value:"<code>db/seeds.rb</code>",id:"dbseedsrb-1",level:2}],p={toc:c};function d(e){let{components:t,...r}=e;return(0,n.kt)("wrapper",(0,a.Z)({},p,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("p",null,"\u9019\u7bc7\u4e3b\u8981\u662f\u7d00\u9304\u5c0d Carrierwave \u5beb ",(0,n.kt)("inlineCode",{parentName:"p"},"db/seeds")," \u7684\u65b9\u6cd5"),(0,n.kt)("h1",{id:"\u55ae\u4e00\u6a94\u6848"},"\u55ae\u4e00\u6a94\u6848"),(0,n.kt)("p",null,"Model \u662f Material\n\u5176\u4e2d attachment \u6b04\u4f4d\u662f\u7d00\u9304\u6a94\u6848\u7684\u6b04\u4f4d"),(0,n.kt)("h2",{id:"appmodelsmaterialrb"},(0,n.kt)("inlineCode",{parentName:"h2"},"app/models/material.rb")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"class Material < ApplicationRecord\n  mount_uploader :attachment, AttachmentUploader\nend\n")),(0,n.kt)("p",null,"\u901a\u5e38\u6703\u628a\u6e2c\u8a66\u7684\u6a94\u6848\u653e\u5728 ",(0,n.kt)("inlineCode",{parentName:"p"},"/test/fixtures/")," \u8cc7\u6599\u593e\u4e0b"),(0,n.kt)("p",null,"\u6211\u6709\u4e00\u500b\u6a94\u6848\u8def\u5f91\u5728"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"/test/fixtures/magic"))),(0,n.kt)("h2",{id:"dbseedsrb"},(0,n.kt)("inlineCode",{parentName:"h2"},"db/seeds.rb")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'material = Material.new()\nmaterial.attachment = File.new(File.join("test/fixtures/files/","magic"))\nmaterial.save!\n')),(0,n.kt)("h1",{id:"\u591a\u500b\u6a94\u6848"},"\u591a\u500b\u6a94\u6848"),(0,n.kt)("p",null,"Database \u662f\u4f7f\u7528 sqlite"),(0,n.kt)("p",null,"\u6240\u4ee5\u662f\u7528 string \u683c\u5f0f\u4f86\u5b58\u6a94\u6848\u8cc7\u8a0a"),(0,n.kt)("p",null,(0,n.kt)("a",{parentName:"p",href:"https://github.com/carrierwaveuploader/carrierwave/issues/1755"},"\u5b98\u65b9 issue")),(0,n.kt)("p",null,"\u6211\u6709\u5169\u500b\u6a94\u6848\u8def\u5f91\u5728"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"/test/fixtures/magic")),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"/test/fixtures/gdb.txt"))),(0,n.kt)("h2",{id:"appmodelschallengerb"},(0,n.kt)("inlineCode",{parentName:"h2"},"app/models/challenge.rb")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},"class Challenge < ApplicationRecord\n  mount_uploaders :attachments, AttachmentUploader\nend\n")),(0,n.kt)("h2",{id:"dbseedsrb-1"},(0,n.kt)("inlineCode",{parentName:"h2"},"db/seeds.rb")),(0,n.kt)("pre",null,(0,n.kt)("code",{parentName:"pre"},'challenge = Challenge.new()\nattachments = [ "magic", "gdb.txt" ]\nattachments.map! do | attachment |\n  attachment = File.new(File.join("test/fixtures/files/",attachment))\nend\nchallenge.attachments = attachments\nchallenge.save!\n')))}d.isMDXComponent=!0}}]);